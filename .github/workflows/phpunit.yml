name: "PHPUnit tests"

on:
  pull_request:
  push:

jobs:
  phpunit:
    name: "PHPUnit tests"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        dependencies:
          - "lowest"
          - "highest"
          - "locked"
        php-version:
          - "7.3"
          - "7.4"
          - "8.0"
        operating-system:
          - "ubuntu-latest"
        include:
          - php-version: "8.0"
            dependencies: "highest"
            operating-system: "ubuntu-latest"

    # https://docs.github.com/en/free-pro-team@latest/actions/guides/creating-postgresql-service-containers
    services:
      pgsql:
        image: 'postgres:13'
        env:
          POSTGRES_DB: 'domain_messages'
          POSTGRES_USER: 'username'
          POSTGRES_PASSWORD: 'password'
        ports:
          - '5432:5432'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: 'mysql:5.7'
        env:
          MYSQL_ROOT_PASSWORD: 'root_password'
          MYSQL_DATABASE: 'domain_messages'
          MYSQL_USER: 'username'
          MYSQL_PASSWORD: 'password'
          MYSQL_ROOT_HOST: '%'
        ports:
          - '3306:3306'
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1
          tools: composer:v2, cs2pr

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: |
            ~/.composer/cache
            vendor
          key: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"
          restore-keys: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"

      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-interaction --no-progress --no-suggest --ignore-platform-req=php"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress --no-suggest --ignore-platform-req=php"

      - name: "Install locked dependencies"
        if: ${{ matrix.dependencies == 'locked' }}
        run: "composer install --no-interaction --no-progress --no-suggest --ignore-platform-req=php"

      - name: "Configure databases"
        run: |
          php tests/wait-for-connection.php pgsql
          php tests/wait-for-connection.php mysql
          php tests/setup-mysql-schema.php
          php tests/setup-postgres-schema.php

      - name: "Tests"
        run: "vendor/bin/phpunit"
